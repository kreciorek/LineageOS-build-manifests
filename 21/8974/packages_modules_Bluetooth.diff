project packages/modules/Bluetooth/
diff --git a/system/bta/dm/bta_dm_act.cc b/system/bta/dm/bta_dm_act.cc
index a0b9232..24cdeed 100644
--- a/system/bta/dm/bta_dm_act.cc
+++ b/system/bta/dm/bta_dm_act.cc
@@ -114,6 +114,10 @@ static void bta_dm_ctrl_features_rd_cmpl_cback(tHCI_STATUS result);
 #define PROPERTY_PAGE_TIMEOUT "bluetooth.core.classic.page_timeout"
 #endif
 
+#ifndef PROPERTY_BLE_VND_SUPPORTED
+#define PROPERTY_BLE_VND_SUPPORTED "bluetooth.core.le.vendor_capabilities.enabled"
+#endif
+
 namespace {
 
 struct WaitForAllAclConnectionsToDrain {
@@ -259,7 +263,7 @@ void BTA_dm_on_hw_on() {
       osi_property_get_int32(PROPERTY_PAGE_TIMEOUT,
                              p_bta_dm_cfg->page_timeout));
 
-  if (ble_vnd_is_included()) {
+  if (osi_property_get_bool(PROPERTY_BLE_VND_SUPPORTED, true)) {
     get_btm_client_interface().ble.BTM_BleReadControllerFeatures(
         bta_dm_ctrl_features_rd_cmpl_cback);
   } else {
diff --git a/system/stack/btm/btm_ble_gap.cc b/system/stack/btm/btm_ble_gap.cc
index ac24e99..4c07219 100644
--- a/system/stack/btm/btm_ble_gap.cc
+++ b/system/stack/btm/btm_ble_gap.cc
@@ -85,6 +85,10 @@ void btm_ble_adv_filter_init(void);
 
 #define BTM_VSC_CHIP_CAPABILITY_RSP_LEN_S_RELEASE 25
 
+#ifndef PROPERTY_BLE_VND_SUPPORTED
+#define PROPERTY_BLE_VND_SUPPORTED "bluetooth.core.le.vendor_capabilities.enabled"
+#endif
+
 /* Sysprop paths for scan parameters */
 static const char kPropertyInquiryScanInterval[] =
     "bluetooth.core.le.inquiry_scan_interval";
@@ -681,6 +685,10 @@ static void btm_ble_vendor_capability_vsc_cmpl_cback(
     tBTM_VSC_CMPL* p_vcs_cplt_params) {
   LOG_VERBOSE("%s", __func__);
 
+  if (!osi_property_get_bool(PROPERTY_BLE_VND_SUPPORTED, true)) {
+    return;
+  }
+
   /* Check status of command complete event */
   CHECK(p_vcs_cplt_params->opcode == HCI_BLE_VENDOR_CAP);
   CHECK(p_vcs_cplt_params->param_len > 0);
@@ -827,15 +835,21 @@ void BTM_BleGetDynamicAudioBuffer(
  *
  ******************************************************************************/
 void BTM_BleReadControllerFeatures(tBTM_BLE_CTRL_FEATURES_CBACK* p_vsc_cback) {
-  if (!ble_vnd_is_included()) return;
+  if (osi_property_get_bool(PROPERTY_BLE_VND_SUPPORTED, true)) {
+      if (!ble_vnd_is_included()) return;
 
-  if (btm_cb.cmn_ble_vsc_cb.values_read) return;
+      if (btm_cb.cmn_ble_vsc_cb.values_read) return;
 
-  LOG_VERBOSE("BTM_BleReadControllerFeatures");
+      LOG_VERBOSE("BTM_BleReadControllerFeatures");
 
-  p_ctrl_le_feature_rd_cmpl_cback = p_vsc_cback;
-  BTM_VendorSpecificCommand(HCI_BLE_VENDOR_CAP, 0, NULL,
+      p_ctrl_le_feature_rd_cmpl_cback = p_vsc_cback;
+      BTM_VendorSpecificCommand(HCI_BLE_VENDOR_CAP, 0, NULL,
                             btm_ble_vendor_capability_vsc_cmpl_cback);
+
+  } else {
+    UNUSED(p_vsc_cback);
+    return;
+  }
 }
 
 /*******************************************************************************
@@ -3529,8 +3543,8 @@ void btm_ble_init(void) {
       alarm_new("btm_ble_addr.refresh_raddr_timer");
   btm_ble_pa_sync_cb = {};
   sync_timeout_alarm = alarm_new("btm.sync_start_task");
-  if (!ble_vnd_is_included()) {
-    btm_ble_adv_filter_init();
+  if (osi_property_get_bool(PROPERTY_BLE_VND_SUPPORTED, true)) {
+      btm_ble_adv_filter_init();
   }
 }
